server:
  port: 8080
---

spring:
  profiles: default
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: orderstatus
          destination: ipTVShopProject
          contentType: application/json
        event-out:
          destination: ipTVShopProject
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug
server:
  port: 8084
---

spring:
  profiles: docker
  jpa:
    hibernate:
      ddl-auto: update
    generate-ddl: false
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
  datasource:
    url: ${url}
    username: ${username}
    password: ${password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 4  
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka.kafka.svc.cluster.local:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: orderstatus
          destination: ipTVShopProject
          contentType: application/json
        event-out:
          destination: ipTVShopProject
          contentType: application/json
